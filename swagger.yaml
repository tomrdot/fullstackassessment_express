openapi: 3.0.0
info:
  title: Fullstack Assessment API by Tom R.
  version: 1.0.0
paths:
  /brands:
    get:
      summary: Get all brands
      responses:
        "200":
          description: A list of brands
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    logoPath:
                      type: string

  /products:
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                upc12:
                  type: number
                brandId:
                  type: number
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  price:
                    type: number
                  upc12:
                    type: number
                  brandId:
                    type: number

    get:
      summary: Get all products
      responses:
        "200":
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    price:
                      type: number

  "/products/{productId}":
    get:
      summary: Get single product
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Details of a product
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  price:
                    type: number
                  upc12:
                    type: number
                  brandId:
                    type: number
    put:
      summary: Update a product
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                upc12:
                  type: number
                brandId:
                  type: number
      responses:
        "200":
          description: Updated product
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  price:
                    type: number
                  upc12:
                    type: number
                  brandId:
                    type: number
        "404":
          description: Product not found
        "400":
          description: Bad request (e.g., invalid data format)
    delete:
      summary: Soft delete a product
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Product successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Product not found

  /vehicles:
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                upc12:
                  type: number
                brandId:
                  type: number
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  price:
                    type: number
                  upc12:
                    type: number
                  brandId:
                    type: number

    get:
      summary: Get all vehicles
      responses:
        "200":
          description: A list of vehicles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    dvid:
                      type: string
                    lockStatus:
                      type: string
                    currentSpeedInKm:
                      type: number
                    batteryLevel:
                      type: number
                    status:
                      type: string
                    location:
                      type: string
